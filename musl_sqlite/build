#!/bin/sh

rm -rf ./muslsrc/
rm -rf ./musl/
rm ./sqlite3.c
rm ./musl-gcc.specs

mkdir muslsrc
tar --wildcards --strip-components 1 -C ./muslsrc/ -xzf ./musl*.tar.gz

# Extract sqlite3.c file;
# Only one of the following two commands should be uncommented.

# If SQLite is in ZIP file as usual the amalgamation of the official release is. The zip file is smaller,
# because contains less files.
#unzip -joq sqlite*.zip */sqlite3.c

# If SQLite is in .tar.gz file as usual the pre-release snapshots are.
tar --wildcards --strip-components 1 -xzf ./sqlite*.tar.gz */sqlite3.c

cd muslsrc

# Configure and compile MUSL

echo "Compiling MUSL ..."

./configure --prefix=../musl --host=i386 CC="gcc -m32" CFLAGS="-O3 -mpreferred-stack-boundary=2 -march=x86-64" CROSS_COMPILE="/bin/"
make -j 4 || { echo >&2 "Error: Can't compile MUSL."; exit 1; }
make -j 4 install || { echo >&2 "Error: Can't install MUSL to the current directory."; exit 1; }

cd ..
rm -rf ./muslsrc/ &

echo "Create gcc.specs file..."

# THE BLANK LINES IN THE BELOW TEXT ARE IMPORTANT! 
# DON'T EDIT IF YOU DON'T KNOW WHAT YOU ARE DOING!
# IT IS A BLACK GCC MAGIC!
cat <<EOT > ./musl-gcc.specs
*asm:
--32

%rename cpp_options old_cpp_options

*cpp_options:
-nostdinc -isystem ./musl/include -isystem include%s %(old_cpp_options)

*cc1:
%(cc1_cpu) -nostdinc -isystem ./musl/include -isystem include%s

*link_libgcc:
-L./musl/lib -L .%s

*libgcc:
32/libgcc.a%s %:if-exists(libgcc_eh.a%s)

*startfile:
%{!shared: ./musl/lib/%{pie:S}crt1.o} ./musl/lib/crti.o %{shared|pie:crtbeginS.o%s;:crtbeginS.o%s}

*endfile:
%{shared|pie:crtendS.o%s;:crtendS.o%s} ./musl/lib/crtn.o

*link:
-m elf_i386 -dynamic-linker /lib/ld-musl-i386.so.1 -nostdlib %{shared:-shared} %{static:-static} %{rdynamic:-export-dynamic}

*esp_link:


*esp_options:


*esp_cpp_options:


EOT

# Compile the sqlite3.so shared library.

echo "Compiling SQLite ..."

gcc -m32 -O3 -shared -fno-stack-protector -mpreferred-stack-boundary=2 -march=x86-64    \
    -specs ./musl-gcc.specs                                                             \
    -DSQLITE_DEFAULT_MEMSTATUS=0                                                        \
    -DSQLITE_LIKE_DOESNT_MATCH_BLOBS                                                    \
    -DSQLITE_MAX_EXPR_DEPTH=0                                                           \
    -DSQLITE_OMIT_DEPRECATED                                                            \
    -DSQLITE_OMIT_PROGRESS_CALLBACK                                                     \
    -DSQLITE_OMIT_SHARED_CACHE                                                          \
    -DSQLITE_ENABLE_FTS5                                                                \
    -DSQLITE_OMIT_COMPLETE                                                              \
    -DSQLITE_OMIT_GET_TABLE                                                             \
    -DSQLITE_OMIT_UTF16                                                                 \
    -DSQLITE_OMIT_AUTHORIZATION                                                         \
    -DSQLITE_THREADSAFE=1                                                               \
    -DSQLITE_ENABLE_STAT4                                                               \
./sqlite3.c -o ../www/libsqlite3.so							\
|| { echo >&2 "Error: Can't compile SQLite."; exit 1; }

mv ./musl/lib/libc.so ../www/ld-musl-i386.so
rm -rf ./musl/ &

strip ../www/libsqlite3.so
strip ../www/ld-musl-i386.so


rm ./sqlite3.c
rm ./musl-gcc.specs
